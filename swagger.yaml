swagger: "2.0"
info:
  description: "List of all endpoints of API"
  version: "1.0.0"
  title: "Simple Node API"
host: "petstore.swagger.io"
basePath: "/api"
tags:
- name: "health"
  description: "information about API health"
- name: "register"
  description: "register a new user in database"
- name: "login"
  description: "authentication endpoint"
schemes:
- "https"
- "http"
paths:
  /health:
    get:
      tags:
      - "health"
      summary: "returns information about API health"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success request"
          schema:
            $ref: "#/definitions/Health"
  /register:
    post:
      tags:
      - "register"
      summary: "register a new user in database"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "user object"
        schema:
          $ref: "#/definitions/RegisterParameters"
      responses:
        201:
          description: "Success request"
          schema:
            $ref: "#/definitions/RegisterSuccess"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/RegisterBadRequest"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/DefaultError"
  /login:
    post:
      tags:
      - "login"
      summary: "authenticate the user"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "username and password object"
        schema:
          $ref: "#/definitions/LoginParameters"
      responses:
        200:
          description: "Success request"
          schema:
            $ref: "#/definitions/LoginSuccess"
          
definitions:
  Health:
    type: "object"
    properties:
      health:
        type: "boolean"
        
  DefaultError:
    type: "object"
    properties:
      message:
        type: "string"
        example: "Ocoreu um erro inesperado"

  RegisterParameters:
    type: "object"
    properties:
      email:
        type: "string"
        example: "email@provider.com"
      name:
        type: "string"
        example: "John Doe"
      password:
        type: "string"
        example: "SecretPassword"

  RegisterSuccess:
    type: "object"
    properties:
      message:
        type: "string"
        example: "User created"
  
  RegisterBadRequest:
    type: "array"
    items:
      type: "object"
      properties:
        message:
          type: "string"
          example: "Informe um email válido"
        path:
          type: "string"
          example: "body.email"
          
  LoginParameters:
    type: "object"
    properties:
      email:
        type: "string"
        example: "email@provider.com"
      password:
        type: "string"
        example: "SecretPassword"
          
  LoginSuccess:
    type: "object"
    properties:
      message:
        type: "string"
        example: "Seja bem vindo!"
        
  LoginBadRequest:
    type: "array"
    items:
      type: "object"
      properties:
        message:
          type: "string"
          example: "Informe um email válido"
        path:
          type: "string"
          example: "body.email"
          
  LoginWrongUsername:
    type: "object"
    properties:
      message:
        type: "string"
        example: "Usuário ou senha incorretas"
      